@model EmployeeAttendanceTracker.BLL.DTOs.CreateAttendanceDto

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Attendance</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AttendanceId" />
            <div class="form-group">
                <label asp-for="EmployeeId" class="control-label">Employee Name</label>
                <select asp-for="EmployeeId" class="form-control" asp-items="ViewBag.EmployeeId"></select>
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <div class="input-group">
                    <input asp-for="Date" id="attendanceDate" class="form-control" readonly />
                    <div class="input-group-append">
                        <button type="button" id="calendarBtn" class="btn btn-outline-secondary">
                            📅
                        </button>
                    </div>
                </div>
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<EmployeeAttendanceTracker.BLL.Enums.AttendanceStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Calendar Widget -->
<div id="calendarWidget" class="calendar-widget" style="display: none; position: absolute; z-index: 1000;">
    <div class="calendar-header">
        <button type="button" id="prevMonth">&lt;</button>
        <span id="currentMonth"></span>
        <button type="button" id="nextMonth">&gt;</button>
    </div>
    <div id="calendarBody" class="calendar-body"></div>
</div>

<style>
    .calendar-widget {
        min-width: 280px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }
    
    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }
    
    .calendar-header button {
        background: none;
        border: none;
        font-size: 18px;
        color: #666;
        cursor: pointer;
        padding: 5px 10px;
        border-radius: 4px;
        transition: all 0.2s ease;
    }
    
    .calendar-header button:hover {
        background-color: #f8f9fa;
        color: #333;
    }
    
    #currentMonth {
        font-weight: 600;
        font-size: 16px;
        color: #333;
    }
    
    .calendar-body {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 1px;
    }
    
    .calendar-day {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        cursor: pointer;
        font-size: 14px;
        border-radius: 6px;
        text-align: center;
        transition: all 0.2s ease;
        background: transparent;
        color: #333;
    }
    
    .calendar-day:hover:not(.disabled):not(.calendar-day-header) {
        background-color: #e3f2fd;
        color: #1976d2;
    }
    
    .calendar-day.selected {
        background-color: #1976d2;
        color: white;
        font-weight: 600;
    }
    
    .calendar-day.disabled {
        background-color: transparent;
        color: #ccc;
        cursor: not-allowed;
    }
    
    .calendar-day.other-month {
        color: #bbb;
    }
    
    .calendar-day-header {
        font-weight: 600;
        background-color: transparent;
        border: none;
        cursor: default;
        color: #666;
        font-size: 12px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .calendar-day-header:hover {
        background-color: transparent;
    }
    
    .calendar-day.today {
        background-color: #fff3e0;
        color: #f57c00;
        font-weight: 600;
    }
    
    .calendar-day.today:hover {
        background-color: #ffe0b2;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Initialize calendar
            initializeCalendar();
            
            // Set the current date from the input if it exists
            var currentInputDate = $('#attendanceDate').val();
            if (currentInputDate) {
                selectedDate = new Date(currentInputDate);
            }
        });
        
        // Calendar functionality
        var currentDate = new Date();
        var selectedDate = null;
        
        function initializeCalendar() {
            // Calendar button click
            $('#calendarBtn').click(function(e) {
                e.stopPropagation();
                toggleCalendar();
            });
            
            // Previous/Next month buttons
            $('#prevMonth').click(function() {
                currentDate.setMonth(currentDate.getMonth() - 1);
                renderCalendar();
            });
            
            $('#nextMonth').click(function() {
                currentDate.setMonth(currentDate.getMonth() + 1);
                renderCalendar();
            });
            
            // Close calendar when clicking outside
            $(document).click(function(e) {
                if (!$(e.target).closest('.calendar-widget, #calendarBtn').length) {
                    $('#calendarWidget').hide();
                }
            });
            
            // Initial render
            renderCalendar();
        }
        
        function toggleCalendar() {
            var widget = $('#calendarWidget');
            if (widget.is(':visible')) {
                widget.hide();
            } else {
                // Position the calendar below the input
                var inputGroup = $('#attendanceDate').closest('.input-group');
                var offset = inputGroup.offset();
                widget.css({
                    position: 'absolute',
                    top: offset.top + inputGroup.outerHeight() + 5,
                    left: offset.left,
                    zIndex: 1000
                });
                widget.show();
            }
        }
        
        function renderCalendar() {
            var year = currentDate.getFullYear();
            var month = currentDate.getMonth();
            
            // Update header
            var monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
                             'July', 'August', 'September', 'October', 'November', 'December'];
            $('#currentMonth').text(monthNames[month] + ' ' + year);
            
            // Get first day of month and number of days
            var firstDay = new Date(year, month, 1);
            var lastDay = new Date(year, month + 1, 0);
            var startDate = new Date(firstDay);
            startDate.setDate(startDate.getDate() - firstDay.getDay());
            
            var calendarBody = $('#calendarBody');
            calendarBody.empty();
            
            // Add day headers
            var dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
            dayNames.forEach(function(day) {
                calendarBody.append('<div class="calendar-day calendar-day-header">' + day + '</div>');
            });
            
            // Add calendar days
            var today = new Date();
            today.setHours(0, 0, 0, 0);
            
            for (var i = 0; i < 42; i++) {
                var date = new Date(startDate);
                date.setDate(startDate.getDate() + i);
                
                var dayElement = $('<div class="calendar-day"></div>');
                dayElement.text(date.getDate());
                
                // Check if it's the current month
                if (date.getMonth() !== month) {
                    dayElement.addClass('other-month');
                }
                
                // Check if it's today
                if (date.toDateString() === today.toDateString()) {
                    dayElement.addClass('today');
                }
                
                // Check if it's a future date
                if (date > today) {
                    dayElement.addClass('disabled');
                } else {
                    // Create a closure to capture the current date
                    (function(currentDate) {
                        dayElement.click(function() {
                            selectDate(currentDate);
                        });
                    })(new Date(date));
                }
                
                // Check if it's selected
                if (selectedDate && date.toDateString() === selectedDate.toDateString()) {
                    dayElement.addClass('selected');
                }
                
                calendarBody.append(dayElement);
            }
        }
        
        function selectDate(date) {
            selectedDate = new Date(date);
            var dateString = date.getFullYear() + '-' + 
                           String(date.getMonth() + 1).padStart(2, '0') + '-' + 
                           String(date.getDate()).padStart(2, '0');
            
            $('#attendanceDate').val(dateString);
            $('#calendarWidget').hide();
        }
    </script>
}
